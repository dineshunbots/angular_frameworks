{"ast":null,"code":"import _asyncToGenerator from \"E:/angular/user-management/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3001/v1/auth/';\n    this.authToken = localStorage.getItem('token');\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        \"wtoken\": this.authToken\n      }),\n      body: {}\n    };\n  }\n  login(postData) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const response = yield _this.http.post(_this.apiUrl + 'login', postData).toPromise();\n      return response;\n    })();\n  }\n  register(postData) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const response = yield _this2.http.post(_this2.apiUrl + 'signup', postData).toPromise();\n      return response;\n    })();\n  }\n  getUsers() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const response = yield _this3.http.get(_this3.apiUrl + 'user-list', _this3.httpOptions).toPromise();\n      return response;\n    })();\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,gCAAgC;IAI/C,IAAI,CAACC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE9C,IAAI,CAACC,WAAW,GAAG;MACjBC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACvB,QAAQ,EAAE,IAAI,CAACI;OAChB,CAAC;MACFK,IAAI,EAAE;KACP;EACF;EAGMC,KAAK,CAACC,QAAa;IAAA;IAAA;MACxB,MAAMC,QAAQ,SAAS,KAAI,CAACT,IAAI,CAACU,IAAI,CAAC,KAAI,CAACC,MAAM,GAAE,OAAO,EAAEH,QAAQ,CAAC,CAACI,SAAS,EAAE;MACjF,OAAOH,QAAQ;IAAC;EAClB;EAEMI,QAAQ,CAACL,QAAa;IAAA;IAAA;MAC1B,MAAMC,QAAQ,SAAS,MAAI,CAACT,IAAI,CAACU,IAAI,CAAC,MAAI,CAACC,MAAM,GAAE,QAAQ,EAAEH,QAAQ,CAAC,CAACI,SAAS,EAAE;MAClF,OAAOH,QAAQ;IAAC;EAClB;EAEMK,QAAQ;IAAA;IAAA;MACZ,MAAML,QAAQ,SAAS,MAAI,CAACT,IAAI,CAACe,GAAG,CAAC,MAAI,CAACJ,MAAM,GAAG,WAAW,EAAE,MAAI,CAACP,WAAW,CAAC,CAACQ,SAAS,EAAE;MAC7F,OAAOH,QAAQ;IAAC;EAClB;EAAC;qBA9BUX,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAkB,SAAXlB,WAAW;IAAAmB,YAFV;EAAM","names":["HttpHeaders","UserService","constructor","http","authToken","localStorage","getItem","httpOptions","headers","body","login","postData","response","post","apiUrl","toPromise","register","getUsers","get","factory","providedIn"],"sourceRoot":"","sources":["E:\\angular\\user-management\\src\\app\\services\\user.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private apiUrl = 'http://localhost:3001/v1/auth/';\r\n  public httpOptions;\r\n  public authToken: any;\r\n  constructor(private http: HttpClient) {\r\n    this.authToken = localStorage.getItem('token');\r\n\r\n    this.httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"wtoken\": this.authToken\r\n      }),\r\n      body: {}\r\n    };\r\n   }\r\n\r\n\r\n   async login(postData: any) {\r\n    const response = await this.http.post(this.apiUrl +'login', postData).toPromise();\r\n    return response;\r\n  }\r\n\r\n  async register(postData: any) {\r\n    const response = await this.http.post(this.apiUrl +'signup', postData).toPromise();\r\n    return response;\r\n  }\r\n\r\n  async getUsers() {\r\n    const response = await this.http.get(this.apiUrl + 'user-list', this.httpOptions).toPromise();\r\n    return response;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}