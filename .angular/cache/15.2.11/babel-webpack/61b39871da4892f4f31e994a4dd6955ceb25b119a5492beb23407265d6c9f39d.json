{"ast":null,"code":"import { inject } from '@angular/core';\nimport { NgbActiveOffcanvas } from '@ng-bootstrap/ng-bootstrap';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_app_form_shimmer_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-form-shimmer\", 10);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"rowCount\", 3)(\"type\", 2);\n  }\n}\nfunction RegisterComponent_form_8_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 16);\n    i0.ɵɵtext(2, \" Country Name is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_8_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 16);\n    i0.ɵɵtext(2, \" Phone Code is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_8_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 16);\n    i0.ɵɵtext(2, \" Currency Symbol is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_8_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 16);\n    i0.ɵɵtext(2, \" Capital is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_8_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 16);\n    i0.ɵɵtext(2, \" Currency Name is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\n\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_form_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_8_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.savecountry());\n    });\n    i0.ɵɵelementStart(1, \"div\", 12)(2, \"div\", 13)(3, \"div\", 14)(4, \"label\", 15);\n    i0.ɵɵtext(5, \"Country\");\n    i0.ɵɵelementStart(6, \"span\", 16);\n    i0.ɵɵtext(7, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, RegisterComponent_form_8_div_9_Template, 4, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 13)(11, \"div\", 14)(12, \"label\", 15);\n    i0.ɵɵtext(13, \"Phone Code\");\n    i0.ɵɵelementStart(14, \"span\", 16);\n    i0.ɵɵtext(15, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(16, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, RegisterComponent_form_8_div_17_Template, 4, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 13)(19, \"div\", 14)(20, \"label\", 15);\n    i0.ɵɵtext(21, \"Currency Symbol\");\n    i0.ɵɵelementStart(22, \"span\", 16);\n    i0.ɵɵtext(23, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(24, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, RegisterComponent_form_8_div_25_Template, 4, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 13)(27, \"div\", 14)(28, \"label\", 15);\n    i0.ɵɵtext(29, \"Capital\");\n    i0.ɵɵelementStart(30, \"span\", 16);\n    i0.ɵɵtext(31, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(32, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(33, RegisterComponent_form_8_div_33_Template, 4, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 13)(35, \"div\", 14)(36, \"label\", 15);\n    i0.ɵɵtext(37, \"Currency Name\");\n    i0.ɵɵelementStart(38, \"span\", 16);\n    i0.ɵɵtext(39, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(40, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(41, RegisterComponent_form_8_div_41_Template, 4, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"div\", 13)(43, \"div\", 14)(44, \"label\", 15);\n    i0.ɵɵtext(45, \"Tld\");\n    i0.ɵɵelementStart(46, \"span\", 16);\n    i0.ɵɵtext(47, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(48, \"input\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"div\", 24)(50, \"div\", 25)(51, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_form_8_Template_button_click_51_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.close(\"close\"));\n    });\n    i0.ɵɵtext(52, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"button\", 27);\n    i0.ɵɵtext(54, \"Save\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.country);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"appMaxLength\", 36);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.country.controls[\"country_name\"].hasError(\"required\") && (ctx_r2.country.controls[\"country_name\"].dirty || ctx_r2.country.controls[\"country_name\"].touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMaxLength\", 16);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.country.controls[\"phone_code\"].hasError(\"required\") && (ctx_r2.country.controls[\"phone_code\"].dirty || ctx_r2.country.controls[\"phone_code\"].touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMaxLength\", 6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.country.controls[\"currency_symbol\"].hasError(\"required\") && (ctx_r2.country.controls[\"currency_symbol\"].dirty || ctx_r2.country.controls[\"currency_symbol\"].touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMaxLength\", 20);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.country.controls[\"capital\"].hasError(\"required\") && (ctx_r2.country.controls[\"capital\"].dirty || ctx_r2.country.controls[\"capital\"].touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMaxLength\", 39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.country.controls[\"currency_name\"].hasError(\"required\") && (ctx_r2.country.controls[\"currency_name\"].dirty || ctx_r2.country.controls[\"currency_name\"].touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"appMaxLength\", 3);\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder, apiService, modalService) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.modalService = modalService;\n    this.activeOffcanvas = inject(NgbActiveOffcanvas);\n    this.isLoading = false;\n    this.animationState = 'open';\n  }\n  ngOnInit() {\n    this.country = this.formBuilder.group({\n      country_name: ['', [Validators.maxLength(36), Validators.required]],\n      phone_code: ['', [Validators.maxLength(16), Validators.required]],\n      // iso3: ['', [Validators.maxLength(3)]],\n      // iso2: ['', [Validators.maxLength(3)]],\n      // numeric_code: ['', [Validators.maxLength(11)]],\n      capital: ['', [Validators.maxLength(20)]],\n      // currency: ['', [Validators.maxLength(4)]],\n      currency_name: ['', [Validators.maxLength(39)]],\n      currency_symbol: ['', [Validators.maxLength(50), Validators.required]],\n      tld: [''],\n      is_active: ['1']\n    });\n    console.log(this.dataId);\n    if (this.dataId != null) {\n      this.getcountryById();\n    }\n  }\n  get formControls() {\n    return this.country.controls;\n  }\n  getcountryById() {\n    this.isLoading = true;\n    const api = 'country/get-country-byid';\n    const requestData = {\n      id: this.dataId\n    };\n    this.apiService.postDynamicApiById(api, requestData).then(result => {\n      // const api:String = 'country/get-country-ById?id='+this.dataId;\n      // this.apiService.getDynamicApi(api).then((result: any) => {\n      // console.log(result);\n      this.isLoading = false;\n      if (result.status = 'SUCCESS') {\n        this.country.controls['country_name'].setValue(result.detail.country_name);\n        // this.country.controls['iso3'].setValue(result.detail.iso3);\n        // this.country.controls['iso2'].setValue(result.detail.iso2);\n        // this.country.controls['numeric_code'].setValue(result.detail.numeric_code);\n        this.country.controls['phone_code'].setValue(result.detail.phone_code);\n        this.country.controls['capital'].setValue(result.detail.capital);\n        // this.country.controls['currency'].setValue(result.detail.currency);\n        this.country.controls['currency_name'].setValue(result.detail.currency_name);\n        this.country.controls['currency_symbol'].setValue(result.detail.currency_symbol);\n        this.country.controls['tld'].setValue(result.detail.tld);\n        this.country.controls['is_active'].setValue(result.detail.is_active);\n      } else {\n        // Swal.fire('Warning!', result.message, 'warning');\n        this.comService.openModal({\n          modalType: 'warning',\n          title: 'Warning!',\n          message: result.message\n        });\n      }\n    });\n  }\n  markFormControlsAsTouched() {\n    Object.values(this.country.controls).forEach(control => {\n      control.markAsTouched();\n    });\n  }\n  savecountry() {\n    this.markFormControlsAsTouched();\n    if (this.country.invalid) {\n      console.log(this.country);\n      // Swal.fire({\n      //   title: 'Warning',\n      //   text: 'Please fill all mandatory fields marked',\n      //   icon: 'warning',\n      //   confirmButtonColor: '#336699',\n      //   confirmButtonText: 'Ok'\n      // });\n      this.comService.openModal({\n        modalType: 'warning',\n        title: 'Warning!',\n        message: 'Please fill all mandatory fields marked'\n      });\n    } else {\n      let formData = {};\n      formData = {\n        \"country_name\": this.country.value.country_name,\n        \"phone_code\": this.country.value.phone_code,\n        \"capital\": this.country.value.capital,\n        \"currency_name\": this.country.value.currency_name,\n        \"currency_symbol\": this.country.value.currency_symbol,\n        \"tld\": this.country.value.tld,\n        \"is_active\": this.country.value.is_active\n      };\n      // formData.append(\"country_name\", this.country.value.country_name);\n      // formData.append(\"iso3\", this.country.value.iso3);\n      // formData.append(\"iso2\", this.country.value.iso2);\n      // formData.append(\"numeric_code\", this.country.value.numeric_code);\n      // formData.append(\"phone_code\", this.country.value.phone_code);\n      // formData.append(\"capital\", this.country.value.capital);\n      // formData.append(\"currency\", this.country.value.currency);\n      // formData.append(\"currency_name\", this.country.value.currency_name);\n      // formData.append(\"currency_symbol\", this.country.value.currency_symbol);\n      // formData.append(\"tld\", this.country.value.tld);\n      // formData.append(\"is_active\", this.country.value.is_active);\n      if (this.dataId != null) {\n        const updateapi = 'country/update-country';\n        // formData.append(\"country_id\", this.dataId);\n        formData = {\n          \"country_id\": this.dataId,\n          \"country_name\": this.country.value.country_name,\n          \"phone_code\": this.country.value.phone_code,\n          \"capital\": this.country.value.capital,\n          \"currency_name\": this.country.value.currency_name,\n          \"currency_symbol\": this.country.value.currency_symbol,\n          \"tld\": this.country.value.tld,\n          \"is_active\": this.country.value.is_active\n        };\n        this.apiService.updateDynamicApi(updateapi, formData).then(result => {\n          if (result.status == 'SUCCESS') {\n            // Swal.fire({\n            //   title: 'SUCCESS!',\n            //   text: result.message,\n            //   icon: 'success',\n            //   confirmButtonColor: '#336699',\n            //   confirmButtonText: 'Ok'\n            // }).then((result: any) => {\n            //   if (result.value) {\n            //     this.close('updated');\n            //   }\n            // });\n            this.comService.openModal({\n              modalType: 'success',\n              title: 'SUCCESS!',\n              message: result.message,\n              onClose: result => {\n                this.close('updated');\n              }\n            });\n          } else {\n            // Swal.fire('Warning!', result.message, 'warning');\n            this.comService.openModal({\n              modalType: 'warning',\n              title: 'Warning!',\n              message: result.message\n            });\n          }\n        });\n      } else {\n        const saveapi = 'country/add-country';\n        this.apiService.saveDynamicApi(saveapi, formData).then(result => {\n          if (result.status == 'SUCCESS') {\n            // Swal.fire({\n            //   title: 'SUCCESS!',\n            //   text: result.message,\n            //   icon: 'success',\n            //   confirmButtonColor: '#336699',\n            //   confirmButtonText: 'Ok'\n            // }).then((result: any) => {\n            //   if (result.value) {\n            //     window.location.reload();\n            //     this.close('added');\n            //   }\n            // });\n            this.comService.openModal({\n              modalType: 'success',\n              title: 'SUCCESS!',\n              message: result.message,\n              onClose: result => {\n                window.location.reload();\n                this.close('added');\n              }\n            });\n          } else {\n            // Swal.fire('Warning!', result.message, 'warning');\n            this.comService.openModal({\n              modalType: 'warning',\n              title: 'Warning!',\n              message: result.message\n            });\n          }\n        });\n      }\n    }\n  }\n  close(value) {\n    // this.activeOffcanvas.dismiss(value);\n    this.animationState = 'closed';\n    // Close the off-canvas menu\n    this.activeOffcanvas.dismiss('close');\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.NgbModal));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    inputs: {\n      dataId: \"dataId\"\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[\"class\", \"loading-overlay\", 4, \"ngIf\"], [1, \"offcanvas-header\"], [1, \"offcanvas-title\"], [\"type\", \"button\", 1, \"btn\", \"f_20\", \"close_btn_tranlate\", 3, \"click\"], [1, \"fa-solid\", \"fa-xmark\"], [1, \"offcanvas-body\"], [3, \"rowCount\", \"type\", 4, \"ngIf\"], [\"class\", \"form_wrap\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"loading-overlay\"], [1, \"loading-spinner\"], [3, \"rowCount\", \"type\"], [\"novalidate\", \"\", 1, \"form_wrap\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form_group\"], [1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", \"placeholder\", \"Enter Your Country Name\", \"formControlName\", \"country_name\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [4, \"ngIf\"], [\"type\", \"number\", \"placeholder\", \"Enter Your Phone Code\", \"formControlName\", \"phone_code\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [\"type\", \"email\", \"placeholder\", \"Enter Your Currency Symbol\", \"formControlName\", \"currency_symbol\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [\"type\", \"text\", \"placeholder\", \"Enter Your Capital\", \"formControlName\", \"capital\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [\"type\", \"text\", \"formControlName\", \"currency_name\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [\"type\", \"text\", \"formControlName\", \"tld\", \"appNoEmptySpace\", \"\", 1, \"form-control\", \"b_r_5\", 3, \"appMaxLength\"], [1, \"col-md-12\"], [1, \"text-end\", \"mt-3\"], [\"type\", \"button\", 1, \"btn\", \"btn_outline_primary\", \"me-2\", 3, \"click\"], [\"type\", \"submit\", \"label\", \"Submit\", 1, \"btn\", \"btn_primary\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RegisterComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"h4\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_4_listener() {\n          return ctx.close(\"close\");\n        });\n        i0.ɵɵelement(5, \"i\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtemplate(7, RegisterComponent_app_form_shimmer_7_Template, 1, 2, \"app-form-shimmer\", 6);\n        i0.ɵɵtemplate(8, RegisterComponent_form_8_Template, 55, 12, \"form\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.dataId == null ? \"Add Country\" : \"Update Country\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataId != null && ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    dependencies: [i4.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,MAAM,QAAe,eAAe;AACxD,SAASC,kBAAkB,QAA+B,4BAA4B;AACtF,SAAiCC,UAAU,QAAQ,gBAAgB;;;;;;;;ICFnEC,8BAA+C;IAC7CA,yBAAmC;IACrCA,iBAAM;;;;;IAMJA,uCAAmG;;;IAA7CA,4BAAc;;;;;IAU9DA,2BAC0J;IAChIA,yCAAwB;IAAAA,iBAAI;IAC9DA,8EAAU;IAAAA,iBAAM;;;;;IASRA,2BACoJ;IAC1HA,uCAAsB;IAAAA,iBAAI;IAC5DA,8EAAU;IAAAA,iBAAM;;;;;IASRA,2BACiK;IACzIA,4CAA2B;IAAAA,iBAAI;IAC/DA,8EAAU;IAAAA,iBAAM;;;;;IAURA,2BACyI;IACjHA,oCAAmB;IAAAA,iBAAI;IACvDA,8EAAU;IAAAA,iBAAM;;;;;IASRA,2BAC2J;IACnIA,0CAAyB;IAAAA,iBAAI;IAC7DA,8EAAU;IAAAA,iBAAM;;;;;;IA7DdA,gCAA2G;IAA3BA;MAAAA;MAAA;MAAA,OAAYA,mCAAa;IAAA,EAAC;IACxGA,+BAAiB;IAGeA,uBAAO;IAAAA,gCACX;IAAAA,iBAAC;IAAAA,iBAAO;IAC9BA,4BACsC;IACxCA,iBAAM;IACNA,0EAGQ;IACVA,iBAAM;IACNA,gCAAsB;IAEQA,2BAAU;IAAAA,iCACd;IAAAA,kBAAC;IAAAA,iBAAO;IAC9BA,6BACsC;IACxCA,iBAAM;IACNA,4EAGQ;IACVA,iBAAM;IACNA,gCAAsB;IAEQA,gCAAe;IAAAA,iCACnB;IAAAA,kBAAC;IAAAA,iBAAO;IAC9BA,6BACqC;IACvCA,iBAAM;IACNA,4EAGQ;IACVA,iBAAM;IAENA,gCAAsB;IAEQA,wBAAO;IAAAA,iCACX;IAAAA,kBAAC;IAAAA,iBAAO;IAC9BA,6BACqB;IACvBA,iBAAM;IACNA,4EAGQ;IACVA,iBAAM;IACNA,gCAAsB;IAEQA,8BAAa;IAAAA,iCACjB;IAAAA,kBAAC;IAAAA,iBAAO;IAC9BA,6BACsC;IACxCA,iBAAM;IACNA,4EAGQ;IACVA,iBAAM;IACNA,gCAAsB;IAEQA,oBAAG;IAAAA,iCACP;IAAAA,kBAAC;IAAAA,iBAAO;IAC5BA,6BACoB;IACxBA,iBAAM;IAGRA,gCAAuB;IAGyCA;MAAAA;MAAA;MAAA,OAASA,6BAAM,OAAO,CAAC;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IACpGA,mCAA8D;IAAAA,qBAAI;IAAAA,iBAAS;;;;IA5E3DA,0CAAqB;IAOrBA,eAAmB;IAAnBA,iCAAmB;IAGlCA,eAAoJ;IAApJA,yLAAoJ;IASrIA,eAAmB;IAAnBA,iCAAmB;IAGlCA,eAA8I;IAA9IA,mLAA8I;IAS/HA,eAAkB;IAAlBA,gCAAkB;IAGnCA,eAA6J;IAA7JA,kMAA6J;IAU5JA,eAAmB;IAAnBA,iCAAmB;IAGpBA,eAAqI;IAArIA,0KAAqI;IASpHA,eAAmB;IAAnBA,iCAAmB;IAGpCA,eAAuJ;IAAvJA,4LAAuJ;IASpJA,eAAkB;IAAlBA,gCAAkB;;;ADnE9B,OAAM,MAAOC,iBAAiB;EAW5BC,YAEUC,WAAwB,EACzBC,UAAuB,EACtBC,YAAsB;IAFtB,gBAAW,GAAXF,WAAW;IACZ,eAAU,GAAVC,UAAU;IACT,iBAAY,GAAZC,YAAY;IAbtB,oBAAe,GAAGR,MAAM,CAACC,kBAAkB,CAAC;IAG5C,cAAS,GAAY,KAAK;IAG1B,mBAAc,GAAW,MAAM;EAS3B;EAEJQ,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CACnC;MACEC,YAAY,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACnEC,UAAU,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACjE;MACA;MACA;MACAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACzC;MACAI,aAAa,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MAC/CK,eAAe,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACtEK,GAAG,EAAE,CAAC,EAAE,CAAC;MACTC,SAAS,EAAE,CAAC,GAAG;KAChB,CACF;IAEDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;IAExB,IAAI,IAAI,CAACA,MAAM,IAAI,IAAI,EAAE;MACvB,IAAI,CAACC,cAAc,EAAE;;EAGzB;EAEA,IAAIC,YAAY;IACd,OAAO,IAAI,CAACf,OAAO,CAACgB,QAAQ;EAC9B;EAEAF,cAAc;IACZ,IAAI,CAACG,SAAS,GAAG,IAAI;IACrB,MAAMC,GAAG,GAAW,0BAA0B;IAC9C,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAE,IAAI,CAACP;IAAM,CAAE;IAEvC,IAAI,CAAChB,UAAU,CAACwB,kBAAkB,CAACH,GAAG,EAAGC,WAAW,CAAC,CAACG,IAAI,CAAEC,MAAW,IAAI;MAE3E;MACA;MACE;MACA,IAAI,CAACN,SAAS,GAAG,KAAK;MACtB,IAAIM,MAAM,CAACC,MAAM,GAAG,SAAS,EAAE;QAC7B,IAAI,CAACxB,OAAO,CAACgB,QAAQ,CAAC,cAAc,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAACxB,YAAY,CAAC;QAC1E;QACA;QACA;QACA,IAAI,CAACF,OAAO,CAACgB,QAAQ,CAAC,YAAY,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAACrB,UAAU,CAAC;QACtE,IAAI,CAACL,OAAO,CAACgB,QAAQ,CAAC,SAAS,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAACpB,OAAO,CAAC;QAChE;QACA,IAAI,CAACN,OAAO,CAACgB,QAAQ,CAAC,eAAe,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAACnB,aAAa,CAAC;QAC5E,IAAI,CAACP,OAAO,CAACgB,QAAQ,CAAC,iBAAiB,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAAClB,eAAe,CAAC;QAChF,IAAI,CAACR,OAAO,CAACgB,QAAQ,CAAC,KAAK,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAACjB,GAAG,CAAC;QACxD,IAAI,CAACT,OAAO,CAACgB,QAAQ,CAAC,WAAW,CAAC,CAACS,QAAQ,CAACF,MAAM,CAACG,MAAM,CAAChB,SAAS,CAAC;OACrE,MAAM;QACL;QACA,IAAI,CAACiB,UAAU,CAACC,SAAS,CAAC;UACxBC,SAAS,EAAE,SAAS;UACpBC,KAAK,EAAE,UAAU;UACjBC,OAAO,EAAER,MAAM,CAACQ;SACjB,CAAC;;IAEN,CAAC,CAAC;EACJ;EAEAC,yBAAyB;IACvBC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAClC,OAAO,CAACgB,QAAQ,CAAC,CAACmB,OAAO,CAACC,OAAO,IAAG;MACrDA,OAAO,CAACC,aAAa,EAAE;IACzB,CAAC,CAAC;EACJ;EAEAC,WAAW;IACT,IAAI,CAACN,yBAAyB,EAAE;IAChC,IAAI,IAAI,CAAChC,OAAO,CAACuC,OAAO,EAAE;MACxB5B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;MAEzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC2B,UAAU,CAACC,SAAS,CAAC;QACxBC,SAAS,EAAE,SAAS;QACpBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;OACV,CAAC;KAEH,MAAM;MACL,IAAIS,QAAQ,GAAC,EAAE;MAEfA,QAAQ,GAAC;QAEP,cAAc,EAAE,IAAI,CAACxC,OAAO,CAACyC,KAAK,CAACvC,YAAY;QAC/C,YAAY,EAAE,IAAI,CAACF,OAAO,CAACyC,KAAK,CAACpC,UAAU;QAC3C,SAAS,EAAE,IAAI,CAACL,OAAO,CAACyC,KAAK,CAACnC,OAAO;QACrC,eAAe,EAAE,IAAI,CAACN,OAAO,CAACyC,KAAK,CAAClC,aAAa;QACjD,iBAAiB,EAAE,IAAI,CAACP,OAAO,CAACyC,KAAK,CAACjC,eAAe;QACrD,KAAK,EAAE,IAAI,CAACR,OAAO,CAACyC,KAAK,CAAChC,GAAG;QAC7B,WAAW,EAAE,IAAI,CAACT,OAAO,CAACyC,KAAK,CAAC/B;OAEjC;MAED;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,IAAI,CAACG,MAAM,IAAI,IAAI,EAAE;QACvB,MAAM6B,SAAS,GAAW,wBAAwB;QAClD;QACAF,QAAQ,GAAC;UAEP,YAAY,EAAE,IAAI,CAAC3B,MAAM;UACzB,cAAc,EAAE,IAAI,CAACb,OAAO,CAACyC,KAAK,CAACvC,YAAY;UAC/C,YAAY,EAAE,IAAI,CAACF,OAAO,CAACyC,KAAK,CAACpC,UAAU;UAC3C,SAAS,EAAE,IAAI,CAACL,OAAO,CAACyC,KAAK,CAACnC,OAAO;UACrC,eAAe,EAAE,IAAI,CAACN,OAAO,CAACyC,KAAK,CAAClC,aAAa;UACjD,iBAAiB,EAAE,IAAI,CAACP,OAAO,CAACyC,KAAK,CAACjC,eAAe;UACrD,KAAK,EAAE,IAAI,CAACR,OAAO,CAACyC,KAAK,CAAChC,GAAG;UAC7B,WAAW,EAAE,IAAI,CAACT,OAAO,CAACyC,KAAK,CAAC/B;SAEjC;QACD,IAAI,CAACb,UAAU,CAAC8C,gBAAgB,CAACD,SAAS,EAAEF,QAAQ,CAAC,CAAClB,IAAI,CAAEC,MAAW,IAAI;UACzE,IAAIA,MAAM,CAACC,MAAM,IAAI,SAAS,EAAE;YAC9B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA,IAAI,CAACG,UAAU,CAACC,SAAS,CAAC;cACxBC,SAAS,EAAE,SAAS;cACpBC,KAAK,EAAE,UAAU;cACjBC,OAAO,EAAER,MAAM,CAACQ,OAAO;cACvBa,OAAO,EAAGrB,MAAM,IAAI;gBAClB,IAAI,CAACsB,KAAK,CAAC,SAAS,CAAC;cACvB;aACD,CAAC;WACH,MAAM;YACL;YACA,IAAI,CAAClB,UAAU,CAACC,SAAS,CAAC;cACxBC,SAAS,EAAE,SAAS;cACpBC,KAAK,EAAE,UAAU;cACjBC,OAAO,EAAER,MAAM,CAACQ;aACjB,CAAC;;QAEN,CAAC,CAAC;OACH,MAAM;QACL,MAAMe,OAAO,GAAW,qBAAqB;QAC7C,IAAI,CAACjD,UAAU,CAACkD,cAAc,CAACD,OAAO,EAAEN,QAAQ,CAAC,CAAClB,IAAI,CAAEC,MAAW,IAAI;UACrE,IAAIA,MAAM,CAACC,MAAM,IAAI,SAAS,EAAE;YAC9B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA,IAAI,CAACG,UAAU,CAACC,SAAS,CAAC;cACxBC,SAAS,EAAE,SAAS;cACpBC,KAAK,EAAE,UAAU;cACjBC,OAAO,EAAER,MAAM,CAACQ,OAAO;cACvBa,OAAO,EAAGrB,MAAM,IAAI;gBAClByB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;gBACxB,IAAI,CAACL,KAAK,CAAC,OAAO,CAAC;cACrB;aACD,CAAC;WACH,MAAM;YACL;YACA,IAAI,CAAClB,UAAU,CAACC,SAAS,CAAC;cACxBC,SAAS,EAAE,SAAS;cACpBC,KAAK,EAAE,UAAU;cACjBC,OAAO,EAAER,MAAM,CAACQ;aACjB,CAAC;;QAEN,CAAC,CAAC;;;EAGR;EAEAc,KAAK,CAACJ,KAAa;IACjB;IACA,IAAI,CAACU,cAAc,GAAG,QAAQ;IAC9B;IACA,IAAI,CAACC,eAAe,CAACC,OAAO,CAAC,OAAO,CAAC;EACvC;EAAC;qBA5NU3D,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAA4D;IAAAC;MAAA1C;IAAA;IAAA2C;IAAAC;IAAAC;IAAAC;MAAA;QCV9BlE,kEAEM;QACNA,8BAA8B;QACAA,YAAuD;QAAAA,iBAAK;QACxFA,iCAAoF;QAAzBA;UAAA,OAASmE,UAAM,OAAO,CAAC;QAAA,EAAC;QAACnE,uBAAiC;QAAAA,iBAAS;QAEhIA,8BAA4B;QAC1BA,4FAAmG;QACnGA,sEAgFO;QACTA,iBAAM;;;QA1FAA,oCAAe;QAISA,eAAuD;QAAvDA,2EAAuD;QAIhEA,eAAiC;QAAjCA,0DAAiC;QACHA,eAAgB;QAAhBA,qCAAgB","names":["inject","NgbActiveOffcanvas","Validators","i0","RegisterComponent","constructor","formBuilder","apiService","modalService","ngOnInit","country","group","country_name","maxLength","required","phone_code","capital","currency_name","currency_symbol","tld","is_active","console","log","dataId","getcountryById","formControls","controls","isLoading","api","requestData","id","postDynamicApiById","then","result","status","setValue","detail","comService","openModal","modalType","title","message","markFormControlsAsTouched","Object","values","forEach","control","markAsTouched","savecountry","invalid","formData","value","updateapi","updateDynamicApi","onClose","close","saveapi","saveDynamicApi","window","location","reload","animationState","activeOffcanvas","dismiss","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\angular\\user-management\\src\\app\\pages\\register\\register.component.ts","E:\\angular\\user-management\\src\\app\\pages\\register\\register.component.html"],"sourcesContent":["import { Component, inject, Input } from '@angular/core';\r\nimport { NgbActiveOffcanvas, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  activeOffcanvas = inject(NgbActiveOffcanvas);\r\n  country!: FormGroup;\r\n  @Input() dataId: any;\r\n  isLoading: boolean = false;\r\n  // formData = new FormData();\r\n  title: any;\r\n  animationState: string = 'open';\r\n\r\n\r\n  constructor(\r\n\r\n    private formBuilder: FormBuilder,\r\n    public apiService: UserService,\r\n    private modalService: NgbModal,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.country = this.formBuilder.group(\r\n      {\r\n        country_name: ['', [Validators.maxLength(36), Validators.required]],\r\n        phone_code: ['', [Validators.maxLength(16), Validators.required]],\r\n        // iso3: ['', [Validators.maxLength(3)]],\r\n        // iso2: ['', [Validators.maxLength(3)]],\r\n        // numeric_code: ['', [Validators.maxLength(11)]],\r\n        capital: ['', [Validators.maxLength(20)]],\r\n        // currency: ['', [Validators.maxLength(4)]],\r\n        currency_name: ['', [Validators.maxLength(39)]],\r\n        currency_symbol: ['', [Validators.maxLength(50), Validators.required]],\r\n        tld: [''],\r\n        is_active: ['1'],\r\n      }\r\n    );\r\n\r\n    console.log(this.dataId);\r\n\r\n    if (this.dataId != null) {\r\n      this.getcountryById()\r\n    }\r\n\r\n  }\r\n\r\n  get formControls() {\r\n    return this.country.controls;\r\n  }\r\n\r\n  getcountryById() {\r\n    this.isLoading = true;\r\n    const api: String = 'country/get-country-byid';\r\n    const requestData = { id: this.dataId };\r\n\r\n    this.apiService.postDynamicApiById(api , requestData).then((result: any) => {\r\n\r\n    // const api:String = 'country/get-country-ById?id='+this.dataId;\r\n    // this.apiService.getDynamicApi(api).then((result: any) => {\r\n      // console.log(result);\r\n      this.isLoading = false;\r\n      if (result.status = 'SUCCESS') {\r\n        this.country.controls['country_name'].setValue(result.detail.country_name);\r\n        // this.country.controls['iso3'].setValue(result.detail.iso3);\r\n        // this.country.controls['iso2'].setValue(result.detail.iso2);\r\n        // this.country.controls['numeric_code'].setValue(result.detail.numeric_code);\r\n        this.country.controls['phone_code'].setValue(result.detail.phone_code);\r\n        this.country.controls['capital'].setValue(result.detail.capital);\r\n        // this.country.controls['currency'].setValue(result.detail.currency);\r\n        this.country.controls['currency_name'].setValue(result.detail.currency_name);\r\n        this.country.controls['currency_symbol'].setValue(result.detail.currency_symbol);\r\n        this.country.controls['tld'].setValue(result.detail.tld);\r\n        this.country.controls['is_active'].setValue(result.detail.is_active);\r\n      } else {\r\n        // Swal.fire('Warning!', result.message, 'warning');\r\n        this.comService.openModal({\r\n          modalType: 'warning',\r\n          title: 'Warning!',\r\n          message: result.message,\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  markFormControlsAsTouched() {\r\n    Object.values(this.country.controls).forEach(control => {\r\n      control.markAsTouched();\r\n    });\r\n  }\r\n\r\n  savecountry() {\r\n    this.markFormControlsAsTouched();\r\n    if (this.country.invalid) {\r\n      console.log(this.country);\r\n\r\n      // Swal.fire({\r\n      //   title: 'Warning',\r\n      //   text: 'Please fill all mandatory fields marked',\r\n      //   icon: 'warning',\r\n      //   confirmButtonColor: '#336699',\r\n      //   confirmButtonText: 'Ok'\r\n      // });\r\n      this.comService.openModal({\r\n        modalType: 'warning',\r\n        title: 'Warning!',\r\n        message: 'Please fill all mandatory fields marked',\r\n      });\r\n\r\n    } else {\r\n      let formData={};\r\n\r\n      formData={\r\n\r\n        \"country_name\": this.country.value.country_name,\r\n        \"phone_code\": this.country.value.phone_code,\r\n        \"capital\": this.country.value.capital,\r\n        \"currency_name\": this.country.value.currency_name,\r\n        \"currency_symbol\": this.country.value.currency_symbol,\r\n        \"tld\": this.country.value.tld,\r\n        \"is_active\": this.country.value.is_active,\r\n\r\n      }\r\n\r\n      // formData.append(\"country_name\", this.country.value.country_name);\r\n      // formData.append(\"iso3\", this.country.value.iso3);\r\n      // formData.append(\"iso2\", this.country.value.iso2);\r\n      // formData.append(\"numeric_code\", this.country.value.numeric_code);\r\n      // formData.append(\"phone_code\", this.country.value.phone_code);\r\n      // formData.append(\"capital\", this.country.value.capital);\r\n      // formData.append(\"currency\", this.country.value.currency);\r\n      // formData.append(\"currency_name\", this.country.value.currency_name);\r\n      // formData.append(\"currency_symbol\", this.country.value.currency_symbol);\r\n      // formData.append(\"tld\", this.country.value.tld);\r\n      // formData.append(\"is_active\", this.country.value.is_active);\r\n      if (this.dataId != null) {\r\n        const updateapi: String = 'country/update-country';\r\n        // formData.append(\"country_id\", this.dataId);\r\n        formData={\r\n\r\n          \"country_id\": this.dataId,\r\n          \"country_name\": this.country.value.country_name,\r\n          \"phone_code\": this.country.value.phone_code,\r\n          \"capital\": this.country.value.capital,\r\n          \"currency_name\": this.country.value.currency_name,\r\n          \"currency_symbol\": this.country.value.currency_symbol,\r\n          \"tld\": this.country.value.tld,\r\n          \"is_active\": this.country.value.is_active,\r\n\r\n        }\r\n        this.apiService.updateDynamicApi(updateapi, formData).then((result: any) => {\r\n          if (result.status == 'SUCCESS') {\r\n            // Swal.fire({\r\n            //   title: 'SUCCESS!',\r\n            //   text: result.message,\r\n            //   icon: 'success',\r\n            //   confirmButtonColor: '#336699',\r\n            //   confirmButtonText: 'Ok'\r\n            // }).then((result: any) => {\r\n            //   if (result.value) {\r\n            //     this.close('updated');\r\n            //   }\r\n            // });\r\n            this.comService.openModal({\r\n              modalType: 'success',\r\n              title: 'SUCCESS!',\r\n              message: result.message,\r\n              onClose: (result) => {\r\n                this.close('updated');\r\n              },\r\n            });\r\n          } else {\r\n            // Swal.fire('Warning!', result.message, 'warning');\r\n            this.comService.openModal({\r\n              modalType: 'warning',\r\n              title: 'Warning!',\r\n              message: result.message,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        const saveapi: String = 'country/add-country';\r\n        this.apiService.saveDynamicApi(saveapi, formData).then((result: any) => {\r\n          if (result.status == 'SUCCESS') {\r\n            // Swal.fire({\r\n            //   title: 'SUCCESS!',\r\n            //   text: result.message,\r\n            //   icon: 'success',\r\n            //   confirmButtonColor: '#336699',\r\n            //   confirmButtonText: 'Ok'\r\n            // }).then((result: any) => {\r\n            //   if (result.value) {\r\n            //     window.location.reload();\r\n            //     this.close('added');\r\n            //   }\r\n            // });\r\n            this.comService.openModal({\r\n              modalType: 'success',\r\n              title: 'SUCCESS!',\r\n              message: result.message,\r\n              onClose: (result) => {\r\n                window.location.reload();\r\n                this.close('added');\r\n              },\r\n            });\r\n          } else {\r\n            // Swal.fire('Warning!', result.message, 'warning');\r\n            this.comService.openModal({\r\n              modalType: 'warning',\r\n              title: 'Warning!',\r\n              message: result.message,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  close(value: String) {\r\n    // this.activeOffcanvas.dismiss(value);\r\n    this.animationState = 'closed';\r\n    // Close the off-canvas menu\r\n    this.activeOffcanvas.dismiss('close');\r\n  }\r\n}\r\n","<div *ngIf=\"isLoading\" class=\"loading-overlay\">\r\n  <div class=\"loading-spinner\"></div>\r\n</div>\r\n<div class=\"offcanvas-header\">\r\n  <h4 class=\"offcanvas-title\">{{ dataId == null ? 'Add Country' : 'Update Country' }}</h4>\r\n  <button type=\"button\"  class=\"btn f_20 close_btn_tranlate\" (click)=\"close('close')\"><i class=\"fa-solid fa-xmark\"></i></button>\r\n</div>\r\n<div class=\"offcanvas-body\">\r\n  <app-form-shimmer *ngIf=\"dataId != null && isLoading\" [rowCount]=\"3\" [type]=\"2\"></app-form-shimmer>\r\n  <form class=\"form_wrap\" [formGroup]=\"country\"   *ngIf=\"!isLoading\"   novalidate (ngSubmit)=\"savecountry()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Country<span\r\n            class=\"text-danger\">*</span></label>\r\n          <input type=\"text\" class=\"form-control b_r_5\" placeholder=\"Enter Your Country Name\" formControlName=\"country_name\"\r\n          appNoEmptySpace [appMaxLength]=\"36\" />\r\n        </div>\r\n        <div\r\n          *ngIf=\"country.controls['country_name'].hasError('required') && (country.controls['country_name'].dirty || country.controls['country_name'].touched); \">\r\n          <p class=\"text-danger\"> Country Name is required</p>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Phone Code<span\r\n            class=\"text-danger\">*</span></label>\r\n          <input type=\"number\" class=\"form-control b_r_5\" placeholder=\"Enter Your Phone Code\"  formControlName=\"phone_code\"\r\n          appNoEmptySpace [appMaxLength]=\"16\" />\r\n        </div>\r\n        <div\r\n          *ngIf=\"country.controls['phone_code'].hasError('required') && (country.controls['phone_code'].dirty || country.controls['phone_code'].touched); \">\r\n          <p class=\"text-danger\"> Phone Code is required</p>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Currency Symbol<span\r\n            class=\"text-danger\">*</span></label>\r\n          <input type=\"email\" class=\"form-control b_r_5\" placeholder=\"Enter Your Currency Symbol\"  formControlName=\"currency_symbol\"\r\n          appNoEmptySpace [appMaxLength]=\"6\" />\r\n        </div>\r\n        <div\r\n        *ngIf=\"country.controls['currency_symbol'].hasError('required') && (country.controls['currency_symbol'].dirty || country.controls['currency_symbol'].touched); \">\r\n        <p class=\"text-danger\"> Currency Symbol is required</p>\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Capital<span\r\n            class=\"text-danger\">*</span></label>\r\n          <input type=\"text\" class=\"form-control b_r_5\" placeholder=\"Enter Your Capital\" formControlName=\"capital\" appNoEmptySpace\r\n          [appMaxLength]=\"20\"/>\r\n        </div>\r\n        <div\r\n        *ngIf=\"country.controls['capital'].hasError('required') && (country.controls['capital'].dirty || country.controls['capital'].touched); \">\r\n        <p class=\"text-danger\"> Capital is required</p>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Currency Name<span\r\n            class=\"text-danger\">*</span></label>\r\n          <input type=\"text\" class=\"form-control b_r_5\" formControlName=\"currency_name\"\r\n          appNoEmptySpace [appMaxLength]=\"39\" />\r\n        </div>\r\n        <div\r\n        *ngIf=\"country.controls['currency_name'].hasError('required') && (country.controls['currency_name'].dirty || country.controls['currency_name'].touched); \">\r\n        <p class=\"text-danger\"> Currency Name is required</p>\r\n          </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form_group\">\r\n          <label class=\"form-label\">Tld<span\r\n            class=\"text-danger\">*</span></label>\r\n            <input class=\"form-control b_r_5\" type=\"text\" formControlName=\"tld\"  appNoEmptySpace\r\n            [appMaxLength]=\"3\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-12\">\r\n        <div class=\"text-end mt-3\">\r\n          <!-- <button class=\"btn btn_outline_primary me-2\"  (click)=\"activeOffcanvas.close('close')\">Cancel</button> -->\r\n          <button type=\"button\" class=\"btn btn_outline_primary me-2\"  (click)=\"close('close')\">Cancel</button>\r\n          <button type=\"submit\"  label=\"Submit\" class=\"btn btn_primary\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}